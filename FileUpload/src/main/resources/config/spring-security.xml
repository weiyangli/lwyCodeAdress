<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/security"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security.xsd">
    <!-- 使用自动装配 -->
    <context:annotation-config/>

    <!-- 匹配的 URL 不进行身份验证 -->
    <http security="none" pattern="/page/login"/>

    <!-- 禁止创建 session，使用 token 的方式进行认证 -->
    <http auto-config="true" create-session="stateless" use-expressions="false">
        <!--<intercept-url pattern="/**" access="ROLE_USER" />
        <intercept-url pattern="/demo/filters" access="ROLE_USER"/>-->
        <form-login login-page="/page/login"
                    login-processing-url="/login"
                    authentication-success-handler-ref="authenticationSuccessHandler"
                    authentication-failure-url="/page/login?error"
                    username-parameter="username"
                    password-parameter="password"/>
        <!-- 注销 -->
        <logout logout-url="/logout" logout-success-url="/page/login?logout"/>
        <access-denied-handler error-page="/page/deny"/>

        <csrf disabled="true"/>

        <remember-me key="uniqueAndSecret" token-validity-seconds="2592000"/>
    </http>

    <!-- 密码默认不加密 -->
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"></beans:bean>

    <!-- 通过方法校验用户 -->
   <!-- <authentication-manager id="authenticationManager2">
        <authentication-provider user-service-ref='userDetailsService' />
    </authentication-manager>
    <beans:bean id="userDetailsService" class="ssm.security.UserDetailsService" />-->

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <user-service>
                <!-- 这里创建两个用户，可以通过用户名密码登录 -->
                <user name="adminSystem" password="123456" authorities="ROLE_USER, ROLE_ADMIN"/>
                <user name="admin" password="admin" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
    </authentication-manager>

    <!-- 第三方登陆 filter 和 Token 登陆验证 filter,登陆成功根据不同角色跳转不同页面 -->
    <beans:bean id="authenticationSuccessHandler" class="ssm.security.AuthenticationSuccessHandler"/>

    <!-- 自己定义 AccessDecisionManager 对应的 bean，实现角色继承 -->
    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg>
            <beans:list>
                <beans:ref bean="roleVoter"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>
    <beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
        <beans:constructor-arg ref="roleHierarchy"/>
    </beans:bean>
    <beans:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <beans:property name="hierarchy">
            <beans:value>
                ROLE_ADMIN > ROLE_USER
            </beans:value>
        </beans:property>
    </beans:bean>
</beans:beans>
